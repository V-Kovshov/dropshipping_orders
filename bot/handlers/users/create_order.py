import logging

from aiogram import Router, Bot, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.fsm.context import FSMContext
from asgiref.sync import sync_to_async

from bot.keyboards.base import reply
from bot.keyboards.inline.order_kb import get_inline_shoes, get_inline_size
from bot.middlewares.size import GetSizeMiddleware
from bot.utils.db import check_user_in_db, Order
from bot.utils.statesform import FSMCreateOrder

router = Router()
router.callback_query.middleware(GetSizeMiddleware())
order = Order()

logging.basicConfig(level=logging.INFO,
					format='%(filename)s -> [LINE:%(lineno)d] -> %(levelname)-8s [%(asctime)s] -> %(message)s',
					filename='bot/logging.log',
					filemode='w')


@router.message(F.text == 'üõí–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
async def place_order(msg: Message, state: FSMContext) -> None:
	user_id = msg.from_user.id
	user_in_db = await check_user_in_db(user_id=user_id)
	if user_in_db:
		await msg.answer('–í–≤–µ–¥—ñ—Ç—å –∞—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä—É:')
		await state.set_state(FSMCreateOrder.SHOES_MODEL)
	else:
		user_msg = '–î–ª—è –ø–æ—á–∞—Ç–∫—É –¥–∞–≤–∞–π –∑–∞—Ä–µ—î—Å—Ç—Ä—É—î–º–æ —Ç–≤—ñ–π –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å.\n\n' \
				   '–©–æ–± –ø–æ—á–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å\n<u><b>/registration</b></u>'
		await msg.answer(user_msg)


@router.message(FSMCreateOrder.SHOES_MODEL)
async def search_model(msg: Message, state: FSMContext) -> None:
	"""
	–•–µ–Ω–¥–ª–µ—Ä —à—É–∫–∞—î –º–æ–¥–µ–ª—å –≤ –ë–î

	:param msg: Message
	:param state: FSMContext
	:return: None
	"""
	model = await order.check_article(msg.text)
	if not model:
		await msg.answer(f"'{msg.text}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.\n–°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É –º–æ–¥–µ–ª—å.")
	else:
		await msg.answer('–û–±–µ—Ä—ñ—Ç—å –º–æ–¥–µ–ª—å:', reply_markup=get_inline_shoes(model))
		await state.set_state(FSMCreateOrder.SHOES_SIZE)


@router.callback_query(FSMCreateOrder.SHOES_SIZE)
async def choose_size(call: CallbackQuery, state: FSMContext, sizes: list) -> None:
	"""
	–•–µ–Ω–¥–ª–µ—Ä –≤–∏–≤–æ–¥–∏—Ç—å —Ñ–æ—Ç–æ –º–æ–¥–µ–ª—ñ, –æ–ø–∏—Å —Ç–∞ —Ä–æ–∑–º—ñ—Ä–∏ –º–æ–¥–µ–ª—ñ

	:param call: CallbackQuery
	:param state: FSMContext
	:param sizes: list
	:return: None
	"""
	await state.update_data(model=int(call.data))
	shoes = await order.get_model(int(call.data))
	shoes_img_url = str(shoes.image.url)[1:]
	photo = FSInputFile(shoes_img_url)
	await call.message.answer_photo(
		photo=photo,
		caption=shoes.description,
		reply_markup=get_inline_size(sizes)
	)
