from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from bot.utils.db import check_orders_balance, get_users_orders, get_orders_by_client_surname, check_user_in_db
from bot.utils.statesform import FSMSearchOrderFromProfile
from bot.keyboards.base import reply
from bot.keyboards.inline import user_profile_kb


router = Router()


@router.message(F.text == '–ö–∞–±—ñ–Ω–µ—Çüèõ')
async def private_cabinet(msg: Message) -> None:
	user_id = msg.from_user.id
	user_in_db = await check_user_in_db(user_id=user_id)
	if user_in_db:
		await msg.answer(text='–ö–æ—Ä–∏—Å—Ç—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏üëáüèº', reply_markup=reply.profile_kb())
	else:
		user_msg = 'ü§î–î–ª—è –ø–æ—á–∞—Ç–∫—É –¥–∞–≤–∞–π –∑–∞—Ä–µ—î—Å—Ç—Ä—É—î–º–æ —Ç–≤—ñ–π –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å.\n\n' \
				'–©–æ–± –ø–æ—á–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å\n<u><b>/registration</b></u>'
		await msg.answer(user_msg, reply_markup=reply.start_keyboard())


@router.message(F.text == '–ú—ñ–π –±–∞–ª–∞–Ω—Åüí∞')
async def my_balance(msg: Message) -> None:
	balance = await check_orders_balance(msg.from_user.id)
	await msg.answer(f'–í–∞—à –±–∞–ª–∞–Ω—Å: {balance}–≥—Ä–Ω', reply_markup=reply.back_to_profile_kb())


@router.message(F.text == '–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—èüõç')
async def my_orders(msg: Message) -> None:
	user_id = msg.from_user.id
	all_orders = await get_users_orders(user_id)
	if all_orders:
		await msg.answer(text='–£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', reply_markup=user_profile_kb.all_orders_kb(all_orders))
	else:
		await msg.answer(text='–í–∏ —â–µ –Ω–µ –∑–¥–∞–≤–∞–ª–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è‚òπÔ∏è',
						reply_markup=reply.back_to_profile_kb())


@router.message(F.text == '–ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—èüîç')
async def search_order(msg: Message, state: FSMContext) -> None:
	user_id = msg.from_user.id
	all_orders = await get_users_orders(user_id)
	if all_orders:
		await msg.answer(text='–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ –∫–ª—ñ—î–Ω—Ç–∞:')
		await state.set_state(FSMSearchOrderFromProfile.SURNAME_CLIENT)
	else:
		await msg.answer(text='–í–∏ —â–µ –Ω–µ –∑–¥–∞–≤–∞–ª–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è‚òπÔ∏è',
						reply_markup=reply.back_to_profile_kb())
		await state.clear()


@router.message(FSMSearchOrderFromProfile.SURNAME_CLIENT)
async def get_surname_client(msg: Message, state: FSMContext) -> None:
	user_id = msg.from_user.id
	surname_client = msg.text
	found_orders = await get_orders_by_client_surname(user_id, surname_client)
	await msg.answer(
		text='–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º:üïµüèº',
		reply_markup=user_profile_kb.found_orders_kb(found_orders))
	await state.clear()


@router.message(F.text == '–î–æ–ø–æ–º–æ–≥–∞‚öôÔ∏è')
async def help_user(msg: Message) -> None:
	await msg.answer(f'–í –Ω–∞—Å —Å–∞–º–∏—Ö —ñ–Ω–æ–¥—ñ –≤–∏–Ω–∏–∫–∞—é—Ç—å –ø–∏—Ç–∞–Ω–Ω—è –¥–æ —Å–∞–º–∏—Ö —Å–µ–±–µü§∑üèº‚Äç‚ôÄÔ∏è\n'
					f'–ê–ª–µ –≤–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—Ç–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ\n'
					f'–Ω–∞—à–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: @test_nameüîÆ',
					reply_markup=reply.back_to_profile_kb())


@router.message(F.text == '–ù–∞–∑–∞–¥ –≤ –∫–∞–±—ñ–Ω–µ—Çüèõ')
async def back_to_profile(msg: Message):
	await private_cabinet(msg)
